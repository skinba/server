{"version":3,"sources":["../src/server.js"],"names":["mongoose","Promise","global","db","app","require","PORT","devConfig","port","apiKey","secret","connect","err","console","log","use","express","json","urlencoded","router","passport","initialize","req","res","next","error","Error","message","status","header","get","msg","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGAA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AAVA;AACA;;AAUA,IAAME,KAAK,+DAAX;;AAGA,IAAMC,MAAMC,QAAQ,wBAAR,CAAZ;AACA,IAAMC,OAAOC,sBAAUC,IAAvB;AACA;AACA,IAAMC,SAASF,sBAAUG,MAAzB;;AAEAV,mBAASW,OAAT,CAAiBR,EAAjB,EAAqB,eAAO;AACxB,QAAIS,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAY,YAAYF,GAAxB;AACD,KAFD,MAEO;AACLC,gBAAQC,GAAR,CAAY,sBAAZ;AACD;AACF,CANH;;AAQAV,IAAIW,GAAJ,CAAQ,qBAAR;AACAX,IAAIW,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAb,IAAIW,GAAJ,CAAQC,kBAAQE,UAAR,EAAR;AACAd,IAAIW,GAAJ,CAAQ,MAAR,EAAgBI,gBAAhB;AACAf,IAAIW,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAX,IAAIW,GAAJ,CAAQK,mBAASC,UAAT,EAAR;AACA;AACAjB,IAAIW,GAAJ,CAAQ,UAACO,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,QAAMC,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,UAAME,OAAN,GAAgB,eAAhB;AACAF,UAAMG,MAAN,GAAe,GAAf;AACAJ,SAAKC,KAAL;AAEH,CAND;;AAQArB,IAAIW,GAAJ,CAAQ,UAASO,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B;AACAD,QAAIM,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAN,QAAIM,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;AACAN,QAAIM,MAAJ,CACE,8BADF,EAEE,gDAFF;AAIAL;AACD,CATD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACApB,IAAIW,GAAJ,CAAQ,UAACU,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AAC/BD,QAAIK,MAAJ,CAAWH,MAAMG,MAAN,IAAgB,GAA3B;AACA,WAAOL,IAAIN,IAAJ,CAAS;AACZQ,eAAO;AACHE,qBAASF,MAAME;AADZ;AADK,KAAT,CAAP;AAKH,CAPD;;AAUAvB,IAAI0B,GAAJ,CAAQ,GAAR,EAAa,UAACR,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIN,IAAJ,CAAS;AACLc,aAAK;AADA,KAAT;AAGH,CAJD;;AAMA3B,IAAI4B,MAAJ,CAAW1B,IAAX,EAAiB,YAAM;AACnBO,YAAQC,GAAR,gCAAyCR,IAAzC;AAEH,CAHD","file":"server.js","sourcesContent":["import express from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport router from \"./config/routes\";\r\n// import swaggerUi from 'swagger-ui-express';\r\n// import swaggerDocument from './config/swagger';\r\n\r\nimport logger from 'morgan';\r\nimport cors from 'cors';\r\nimport devConfig from \"./config/env/development\";\r\nimport passport from \"passport\";\r\nimport configureJWTStrategy from \"./api/middlewares/passport-jwt\";\r\n\r\n\r\nmongoose.Promise = global.Promise;\r\nconst db = 'mongodb://user98:user98@ds229258.mlab.com:29258/appointmentdb';\r\n\r\n\r\nconst app = require(express());\r\nconst PORT = devConfig.port;\r\n// const PORT = process.env.port || 8080\r\nconst apiKey = devConfig.secret;\r\n\r\nmongoose.connect(db, err => {\r\n    if (err) {\r\n      console.log('Error !' + err);\r\n    } else {\r\n      console.log('connected to mongoDB');\r\n    }\r\n  });\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(express.urlencoded());\r\napp.use('/api', router);\r\napp.use(logger('dev'));\r\napp.use(passport.initialize());\r\nconfigureJWTStrategy();\r\napp.use((req, res, next) => {\r\n    const error = new Error('Not Found');\r\n    error.message = 'Invalid Route';\r\n    error.status = 404;\r\n    next(error);\r\n\r\n});\r\n\r\napp.use(function(req, res, next) {\r\n  //set headers to allow cross origin request.\r\n  res.header('Access-Control-Allow-Origin', '*');\r\n  res.header('Access-Control-Allow-Methods', 'PUT, GET, POST, DELETE, OPTIONS');\r\n  res.header(\r\n    'Access-Control-Allow-Headers',\r\n    'Origin, X-Requested-With, Content-Type, Accept'\r\n  );\r\n  next();\r\n});\r\n// app.use(\r\n//     '/api-docs',\r\n//     swaggerUi.serve,\r\n//     swaggerUi.setup(swaggerDocument, {\r\n//         explorer: true,\r\n//     })\r\n// );\r\napp.use((error, req, res, next) => {\r\n    res.status(error.status || 500);\r\n    return res.json({\r\n        error: {\r\n            message: error.message,\r\n        },\r\n    });\r\n});\r\n\r\n\r\napp.get('/', (req, res) => {\r\n    res.json({\r\n        msg: 'Welcome to appointment app'\r\n    })\r\n})\r\n\r\napp.listen(PORT, () => {\r\n    console.log(`server is running at port ${PORT}`);\r\n\r\n})"]}