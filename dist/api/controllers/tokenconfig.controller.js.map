{"version":3,"sources":["../../../src/api/controllers/tokenconfig.controller.js"],"names":["create","req","res","TokenConfig","tokenno","then","json","tokenConfig","catch","status","HttpStatus","INTERNAL_SERVER_ERROR","err","findall","find","tokenconfig","update","findOneAndUpdate","_id","body","id","$set","new"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AAEXA,UAFW,kBAEJC,GAFI,EAECC,GAFD,EAEM;AACbC,8BAAYH,MAAZ,CAAmB;AACXI,qBAAS;AADE,SAAnB,EAGKC,IAHL,CAGU;AAAA,mBAAeH,IAAII,IAAJ,CAASC,WAAT,CAAf;AAAA,SAHV,EAIKC,KAJL,CAIW;AAAA,mBAAON,IAAIO,MAAJ,CAAWC,0BAAWC,qBAAtB,EAA6CL,IAA7C,CAAkDM,GAAlD,CAAP;AAAA,SAJX;AAKH,KARU;AASXC,WATW,mBASHZ,GATG,EASEC,GATF,EASO;AACdC,8BAAYW,IAAZ,GACKT,IADL,CACU;AAAA,mBAAeH,IAAII,IAAJ,CAASS,WAAT,CAAf;AAAA,SADV,EAEKP,KAFL,CAEW;AAAA,mBAAON,IAAIO,MAAJ,CAAWC,0BAAWC,qBAAtB,EAA6CL,IAA7C,CAAkDM,GAAlD,CAAP;AAAA,SAFX;AAGH,KAbU;AAeXI,UAfW,kBAeJf,GAfI,EAeCC,GAfD,EAeM;AACbC,8BAAYc,gBAAZ,CAA6B;AACrBC,iBAAKjB,IAAIkB,IAAJ,CAASC;AADO,SAA7B,EAEO;AACCC,kBAAM;AACFjB,yBAASH,IAAIkB,IAAJ,CAASf;AADhB;AADP,SAFP,EAMO;AACCkB,iBAAK;AADN,SANP,EAUKjB,IAVL,CAUU;AAAA,mBAAeH,IAAII,IAAJ,CAASS,WAAT,CAAf;AAAA,SAVV,EAWKP,KAXL,CAWW;AAAA,mBAAON,IAAIO,MAAJ,CAAWC,0BAAWC,qBAAtB,EAA6CL,IAA7C,CAAkDM,GAAlD,CAAP;AAAA,SAXX;AAYH;AA5BU,C","file":"tokenconfig.controller.js","sourcesContent":["import TokenConfig from \"../model/tokenconfig.model\";\r\nimport HttpStatus from \"http-status-codes\";\r\n\r\nexport default {\r\n\r\n    create(req, res) {\r\n        TokenConfig.create({\r\n                tokenno: 100\r\n            })\r\n            .then(tokenConfig => res.json(tokenConfig))\r\n            .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    },\r\n    findall(req, res) {\r\n        TokenConfig.find()\r\n            .then(tokenconfig => res.json(tokenconfig))\r\n            .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    },\r\n\r\n    update(req, res) {\r\n        TokenConfig.findOneAndUpdate({\r\n                _id: req.body.id\r\n            }, {\r\n                $set: {\r\n                    tokenno: req.body.tokenno,\r\n                }\r\n            }, {\r\n                new: true\r\n            })\r\n\r\n            .then(tokenconfig => res.json(tokenconfig))\r\n            .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    },\r\n}"]}