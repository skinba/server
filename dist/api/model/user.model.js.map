{"version":3,"sources":["../../../src/api/model/user.model.js"],"names":["Schema","mongoose","UserSchema","name","type","String","required","mobileno","Number","index","unique","sparse","password","pre","isModified","isNew","bcryptjs","genSalt","salt","hash","model"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;IAGIA,M,GACAC,kB,CADAD,M;;AAEJ,IAAME,aAAa,IAAIF,MAAJ,CAAW;;AAE1BG,UAAM;AACFC,cAAMC,MADJ;AAEFC,kBAAU;;AAFR,KAFoB;AAO1BC,cAAU;AACNH,cAAMI,MADA;AAENF,kBAAU,IAFJ;AAGNG,eAAM,IAHA;AAILC,gBAAO,IAJF;AAKLC,gBAAO;AALF,KAPgB;AAc1BC,cAAU;AACNR,cAAMC,MADA;AAENC,kBAAU;;AAFJ;;AAdgB,CAAX,CAAnB;;AAuBAJ,WAAWW,GAAX,CAAe,MAAf,0DAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACd,KAAKC,UAAL,CAAgB,UAAhB,KAA+B,KAAKC,KADtB;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAEKC,mBAASC,OAAT,EAFL;;AAAA;AAERC,wBAFQ;AAAA;AAAA,2BAGKF,mBAASG,IAAT,CAAc,KAAKP,QAAnB,EAA6BM,IAA7B,CAHL;;AAAA;AAGRC,wBAHQ;;AAId,yBAAKP,QAAL,GAAgBO,IAAhB;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;kBAQelB,mBAASmB,KAAT,CAAe,MAAf,EAAuBlB,UAAvB,C","file":"user.model.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport bcryptjs from 'bcryptjs'\r\n\r\nconst {\r\n    Schema\r\n} = mongoose;\r\nconst UserSchema = new Schema({\r\n\r\n    name: {\r\n        type: String,\r\n        required: true,\r\n        \r\n    },\r\n    mobileno: {\r\n        type: Number,\r\n        required: true,\r\n        index:true,\r\n         unique:true,\r\n         sparse:true\r\n    },\r\n    password: {\r\n        type: String,\r\n        required: true,\r\n        \r\n    },\r\n\r\n\r\n});\r\n\r\nUserSchema.pre('save',async function(){\r\n    if (this.isModified('password') || this.isNew) {\r\n        const salt = await bcryptjs.genSalt();\r\n        const hash = await bcryptjs.hash(this.password, salt);\r\n        this.password = hash;\r\n      }\r\n})\r\n\r\nexport default mongoose.model('User', UserSchema);"]}